Artificial Intelligence Homework 1 Report
Peter Gifford, Sam Behrens

	In our implementation of the maze search algorithms we used nodes and edges to convert the mazes into networks that could then be searched. We chose to implement our own Node and Edges classes rather than use the default Java implementations so that we could store whatever information we needed for tracking paths within them and one of us already had big pieces of them written. We then scanned in the graph line by line into a two dimensional array where each index held a node that held the character at that spot and the id of that spot. To provide the final piece of structure we iterated through the array and if the character of the node above, below, left, or right of that spot was a space or * then an edge would be added. We also stored the x and y coordinate of the P and * for later use as the start and end. This was all done in java.

	With this network established, we implemented the search algorithms starting on the P and searching for the *. To represent the answers to these visually, the nodes in the network were the same nodes in the were in the array. This allowed us to return a list of nodes from the algorithms and just set the content of each of those nodes equal to . to visualize the results. 

	First we did depth first search. This algorithm started with creating a stack and adding the P start node. Then a loop was established to do the following steps until the * end node was reached. If the node has already been visited then the loop will continue. Then it will pop the top off of the stack and then check if it is the solution node. If it is the solution node then the list of nodes that it took to get there would is returned. If these options are all not the case then the current node adds itself to the list of nodes traveled to get to that point and adds this list to all of the nodes that are connected to the current node and adds these nodes to the stack. This was a standard implementation strategy for depth first.

Depth First:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%.........% %.......    %.....%.........  %...........%....*%
%.%%%% %%.% %.%%%%%.%%%%%.%%%.%.%%%% %%.%%%.%% %% %%%.%.% % %
%.%     %.  %..   %.......%...%...    %.....%   % % %...% % %
%.% %%% %.%%%%.%% %%%%%%%%%.%%%%%.%%% % %%% % % % % %%%%% % %
%.%   %...%....   %       %.......%   %   % % % %     %   % %
%.% %%%.%%%.%%% %%% % %%% %%%% %% % %%% % %%% % %%% %%% %%% %
%.  %  ...%.....%   % %         % % %   %     %   % %   % % %
%.%%% %%%.%%%%%.%%%%% % %%% %%% %%%%% %%%%%% %%%% %%% %%% % %
%.    %...    %.....    % % %         %   %     %     %   % %
%.%%%%%.%%%%% %%%%%.%%% % % % %%%%%%%%% % % %%% %%% %%% %%% %
%.%   %.%   %.......  % %   % %     %   % % %           %   %
%.% %%%.% %%%.%%%%% % % %%%%% % % %%% % % %%% %%%%% %%%%% %%%
%.  %...% %...    % % %   %   % %   % % %     %     %   % % %
%.%%%.%%% %.% %%% %%% %%% % %%% %%% % % %%%%%%%%% %%% % % % %
%.%...%   %.%   %   % %   % %     %   %   %     % %   %   % %
%. .%%% % %.% % % % % % %%% % %%%%%%% %%% % %%% % % %%%%%%% %
%.%...% %...% %   %   % %                 % %   % % %       %
%.%%%.%%%.%%% %%% % %%% % %%% % %%%%%% %%%% % %%%%% % % %%% %
%...%.....    %   % %   % %   %         %   % %     % % %   %
%%%.%%% % %%%%% %%%%% %%%%% %%% %%%%%%% % %%% % %%%%%%% % %%%
%...  %       %             %         %     %           %   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 180
Expanded Nodes: 229

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%.....  %.......%...% %...  %   %...%   %.............% %...%.........%.....%   %
%   %.%%%.% %%%.%.%.% %.%.%%% % %.%.% %%%.%%% %% %%%%.% %.%.%.% %%%%%.%.%%%.%%% %
%   %.....% % %...%.% ..%...% % %.%.% %...% % %     %.%...%...%     %...% %...  %
%%% %%%% %% % %  %%.%%.%% %.%%% %.%.% %.%%% % %%%%% %.%.%%%%% %   % % %%% % %.% %
%   % %     %     %.... % %...%  .%.% %.....%     % %.%.....%   %       %   %.% %
%   % % % %   % % %     % % %.%%%.%.% %%%%%.%%%%% % %.%%%%%.% % % %%% % %%% %.%%%
% %   % % %   % % %     %   %.....%.% ......%     % %.....%.  % %     %   %...  %
% %%% % %%% % %%% % %  %% %%% %%% %.%%.%%%% % %%%%% %.....%.%   %% %% %%% %.%%% %
% %       % % %   % %   % %     % %.... %     %.......    %.%       % %   %.%   %
% % %%%%% % % % %%% % % %%% %%% % %%    % %%%%%.%%% %%% %%%.% %%%%% %%% %%%.% % %
%   %   %   % %     % %     %.........  % %   %.% %   %   ..%     %     %...% % %
% % %%% %%%%% % % %%% % % %%%.%%%%%%%.%%% % %%%.% %%% % %%.%%%%        %%.%%% % %
% %         % % %   % %   % %.%.......%   % ....  % %   %..       %     %...% % %
% % %%% %%%%% % %%% % %%%%% %.%.%%%%%%%%% %%.%%%% % %%%%%.%% %%%%%%% %% %%%.% %%%
%   %   %     %   %   %.......%.........%   ....%   %...%.%   %           %.%   %
%%% % %%% %%%%% %%%%%%%.%%% %....%% %%%.%%%%% %.%%% %.%...    % % %%%% %%%%.%%% %
%       % %.......    %.%   %.  ......%.........% %  .%   % % % %   %     %.%   %
% %%%%%%% %.%%%%%.%%% %.%%% %.%%%%%%%.%%%%%%%%%%% %%%.%%% % % % %%% % %%% %.% %%%
%         %.....%...% %...% %...%   %...%...%  ...%...  %   %   % %     % %.%   %
%%%%% % %%%%%...%%%.% %%%.% %%%.%%% ....%.%.%%%.%.%.%%% % %%%%%%% %%% %%% %.% % %
%     %   %  .%...%.% %...%   %...........%.....%...%   %         %   %   %.% % %
% %%%%%%% % %.%.%.%.% %.%%% % %%%%%.% %%%%%%% %%%%%%% %%%%%%% %%% %%% % %%%.% % %
%       % % %...%.%.% %.%   %.....%.%       % %   %   %   %     %   % %   %.% % %
%%% %% %% % %%%%%.%.%%%.% % %. %%.%.%%%% %% %%% % %%%%% % % % % %%% % %%% %.%%% %
%         %   %...%...%.% % %...%.%.      %     %       % % % %   % %   % %.....%
% %%%%    %%% %.%%% %.%.%%% %%%.%.%.%%% % % % %%% % %%%%% % %     % % % % %%%%%.%
%   %     %   %.%   %...    %...%...%   % % %   % % %     % %     % % % %     %.%
% % %%% %%% %%%.%% %%%%%%%%%%.%%%%%%% %%% % %%% % % %%% % % % %%%%% %%% %%%%% %.%
% %           %...............        %   %     %       %   %               %  *%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 446
Expanded Nodes: 904

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     %.............%
%                     %.............%
%                     %.............%
%                     %.............%
%                     %.............%
%                     %%%%%%........%
%                          %........%
%                          %........%
%                          %........%
%                          %........%
%.....................     %........%
%........%%%%%%%%%%%%...............%
%........%                          %
%........%                          %
%........%                          %
%........%                          %
%........%                          %
%.......*%                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 394
Expanded Nodes: 439



	Next we did breadth first search. This was a very similar implementation to depth first search. However, breadth first uses a queue rather than a stack so we used a linked list. Just like in depth first, we added our starting node to our queue. Then we ran a loop that has the exit condition of the queue being empty, however, that parameter will only be met if there is no solution. We set the current node to be the first node in our queue and remove that node. If that node is equal to our target of * then we exit the loop and return our path we generated. If not our target, we add it to our list of visited nodes and add this list to the nodes connected to the current node, and then add these nodes to the stack. Differently from depth first, we had to add a comparator to the current list length because there is the option of multiple fastest routes, especially in the open maze. If new path was not faster then we did not add it to our traveled to list.

Breadth First:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         % %           %     %           %...........%....*%
% %%%% %% % % %%%%% %%%%% %%% % %%%% %% %%%.%% %% %%%.%.% % %
% %     %   %     %       %   %       %.....%   % % %...% % %
% % %%% % %%%% %% %%%%%%%%% %%%%% %%% %.%%% % % % % %%%%% % %
% %   %   %       %       %       %   %.  % % % %     %   % %
% % %%% %%% %%% %%% % %%% %%%% %% % %%%.% %%% % %%% %%% %%% %
%   %     %     %   % %.........% % %...%     %   % %   % % %
% %%% %%% %%%%% %%%%% %.%%% %%%.%%%%%.%%%%%% %%%% %%% %%% % %
%     %.......%    .....% % %  .......%   %     %     %   % %
% %%%%%.%%%%%.%%%%%.%%% % % % %%%%%%%%% % % %%% %%% %%% %%% %
% %   %.%   %.......  % %   % %     %   % % %           %   %
% % %%%.% %%% %%%%% % % %%%%% % % %%% % % %%% %%%%% %%%%% %%%
%   %...% %       % % %   %   % %   % % %     %     %   % % %
% %%%.%%% % % %%% %%% %%% % %%% %%% % % %%%%%%%%% %%% % % % %
% %...%   % %   %   % %   % %     %   %   %     % %   %   % %
%...%%% % % % % % % % % %%% % %%%%%%% %%% % %%% % % %%%%%%% %
%.%   % %   % %   %   % %                 % %   % % %       %
%.%%% %%% %%% %%% % %%% % %%% % %%%%%% %%%% % %%%%% % % %%% %
%...%         %   % %   % %   %         %   % %     % % %   %
%%%.%%% % %%%%% %%%%% %%%%% %%% %%%%%%% % %%% % %%%%%%% % %%%
%...  %       %             %         %     %           %   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 94
Expanded Nodes: 611

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%.....  %.......%...% %     %   %   %   %             % %   %         %     %   %
%   %.%%%.% %%%.%.%.% % % %%% % % % % %%% %%% %% %%%% % % % % % %%%%% % %%% %%% %
%   %.....% % %...%.%   %   % % % % % %   % % %     % %   %   %     %   % %     %
%%% %%%% %% % %  %%.%% %% % %%% % % % % %%% % %%%%% % % %%%%% %   % % %%% % % % %
%   % %     %     %.    % %   %   % % %     %     % % %     %   %       %   % % %
%   % % % %   % % %.    % % % %%% % % %%%%% %%%%% % % %%%%% % % % %%% % %%% % %%%
% %   % % %   % % %...  %   %     % % ......%     % %     %   % %     %   %     %
% %%% % %%% % %%% % %. %% %%% %%% % %%.%%%%.% %%%%% %     % %   %% %% %%% % %%% %
% %       % % %   % %...% %.....% %   . %...  %.........  % %       % %   % %   %
% % %%%%% % % % %%% % %.%%%.%%%.% %%  . %.%%%%%.%%% %%%.%%% % %%%%% %%% %%% % % %
%   %   %   % %     % %.....%  ........ %.%   %.% %   %.... %     %     %   % % %
% % %%% %%%%% % % %%% % % %%% %%%%%%% %%%.% %%%.% %%% % %%.%%%%  ...   %% %%% % %
% %         % % %   % %   % % %       %  .% ....  % %   % ........%..   %   % % %
% % %%% %%%%% % %%% % %%%%% % % %%%%%%%%%.%%.%%%% % %%%%% %% %%%%%%%.%% %%% % %%%
%   %   %     %   %   %       %         %....   %   %   % %   %     ...   % %   %
%%% % %%% %%%%% %%%%%%% %%% %    %% %%% %%%%% % %%% % %       % % %%%%.%%%% %%% %
%       % %           % %   %         %         % %   %   % % % %   % ....% %   %
% %%%%%%% % %%%%% %%% % %%% % %%%%%%% %%%%%%%%%%% %%% %%% % % % %%% % %%%.% % %%%
%         %     %   % %   % %   %   %   %   %     %     %   %   % %     %.% %   %
%%%%% % %%%%%   %%% % %%% % %%% %%%     % % %%% % % %%% % %%%%%%% %%% %%%.% % % %
%     %   %   %   % % %   %   %           %     %   %   %         %   %...% % % %
% %%%%%%% % % % % % % % %%% % %%%%% % %%%%%%% %%%%%%% %%%%%%% %%% %%% %.%%% % % %
%       % % %   % % % % %   %     % %       % %   %   %   %     %   % %...% % % %
%%% %% %% % %%%%% % %%% % % %  %% % %%%% %% %%% % %%%%% % % % % %%% % %%%.% %%% %
%         %   %   %   % % % %   % %       %     %       % % % %   % %   %.%     %
% %%%%    %%% % %%% % % %%% %%% % % %%% % % % %%% % %%%%% % %     % % % %.%%%%% %
%   %     %   % %   %       %   %   %   % % %   % % %     % %     % % % %.....% %
% % %%% %%% %%% %% %%%%%%%%%% %%%%%%% %%% % %%% % % %%% % % % %%%%% %%% %%%%%.% %
% %           %                       %   %     %       %   %               %..*%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 148
Expanded Nodes: 1255

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     %.            %
%                     %.            %
%                     %.            %
%                     %.            %
%                     %......       %
%                     %%%%%%.       %
%                          %.       %
%                          %.       %
%                          %.       %
%                          %.       %
%       ...................%.       %
%       .%%%%%%%%%%%%     ...       %
%       .%                          %
%       .%                          %
%       .%                          %
%       .%                          %
%       .%                          %
%       *%                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 44
Expanded Nodes: 505



	Then we implemented greedy first search. To do this we first copied all the code from depth first search. Then we changed the stack to a priority queue. To make sure the priority queue acted on what we wanted, we implemented a function to calculate manhattan distance. With this, we created a new comparator that organized the queue based on the manhattan distance. 

Greedy First: 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         % %           %     %     ....  %...........%....*%
% %%%% %% % % %%%%% %%%%% %%% % %%%%.%%.%%%.%% %% %%%.%.% % %
% %     %   %     %       %   %  .... %.....%   % % %...% % %
% % %%% % %%%% %% %%%%%%%%% %%%%%.%%% % %%% % % % % %%%%% % %
% %   %   %       %       %   ....%   %   % % % %     %   % %
% % %%% %%% %%% %%% % %%% %%%%.%% % %%% % %%% % %%% %%% %%% %
%   %     %     %   % %........ % % %   %     %   % %   % % %
% %%% %%% %%%%% %%%%% %.%%% %%% %%%%% %%%%%% %%%% %%% %%% % %
%     %.......%    .....% % %         %   %     %     %   % %
% %%%%%.%%%%%.%%%%%.%%% % % % %%%%%%%%% % % %%% %%% %%% %%% %
% %   %.%   %.......  % %   % %     %   % % %           %   %
% % %%%.% %%% %%%%% % % %%%%% % % %%% % % %%% %%%%% %%%%% %%%
%   %...% %       % % %   %   % %   % % %     %     %   % % %
% %%%.%%% % % %%% %%% %%% % %%% %%% % % %%%%%%%%% %%% % % % %
% %...%   % %   %   % %   % %     %   %   %     % %   %   % %
%...%%% % % % % % % % % %%% % %%%%%%% %%% % %%% % % %%%%%%% %
%.%   % %   % %   %   % %                 % %   % % %       %
%.%%% %%% %%% %%% % %%% % %%% % %%%%%% %%%% % %%%%% % % %%% %
%...%         %   % %   % %   %         %   % %     % % %   %
%%%.%%% % %%%%% %%%%% %%%%% %%% %%%%%%% % %%% % %%%%%%% % %%%
%...  %       %             %         %     %           %   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 94
Expanded Nodes: 102

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%.      %       %   % %     %   %   %   %             % %   %         %     %   %
%.  % %%% % %%% % % % % % %%% % % % % %%% %%% %% %%%% % % % % % %%%%% % %%% %%% %
%...%     % % %   % %   %   % % % % % %   % % %     % %   %   %     %   % %     %
%%%.%%%% %% % %  %% %% %% % %%% % % % % %%% % %%%%% % % %%%%% %   % % %%% % % % %
%  .% %     %     %     % %   %   % % %     %     % % %     %   %       %   % % %
%  .% % % %   % % %     % % % %%% % % %%%%% %%%%% % % %%%%% % % % %%% % %%% % %%%
% %...% % %...% % %     %   %     % %       %     % %     %   % %     %   %     %
% %%%.% %%%.%.%%% % %  %% %%% %%% % %% %%%% % %%%%% %     % %   %% %% %%% % %%% %
% %  .....%.%.%   % %   % %     % %     %     %           % %       % %   % %   %
% % %%%%%.%.%.% %%% % % %%% %%% % %%    % %%%%% %%% %%% %%% % %%%%% %%% %%% % % %
%   %   %...%.%     % %     %           % %   % % %   %     %     %     %   % % %
% % %%% %%%%%.% % %%% % % %%% %%%%%%% %%% % %%% % %%% % %% %%%%        %% %%% % %
% %         %.% %   % %   % % %       %   %       % %   %         %     %   % % %
% % %%% %%%%%.% %%% % %%%%% % % %%%%%%%%% %% %%%% % %%%%% %% %%%%%%% %% %%% % %%%
%   %   %.....%   %   %       %         %       %   %   % %   %           % %   %
%%% % %%%.%%%%% %%%%%%% %%% %    %% %%% %%%%% % %%% % %       % % %%%% %%%% %%% %
%       %.%           % %   %         %         % %   %   % % % %   %.....% %   %
% %%%%%%%.% %%%%% %%% % %%% % %%%%%%% %%%%%%%%%%% %%% %%% % % % %%% %.%%%.% % %%%
%      ...%     %   % %   % %   %   %   %   %     %     %   %   % %  .  %.% %   %
%%%%% %.%%%%%   %%% % %%% % %%% %%%     % % %%% % % %%% % %%%%%%% %%%.%%%.% % % %
%     %...%...%...% % %   %   %           %     %   %   %         %  .%...% % % %
% %%%%%%%.%.%.%.%.% % % %%% % %%%%% % %%%%%%% %%%%%%% %%%%%%% %%% %%%.%.%%% % % %
%       %.%.%...%.% % % %   %     % %   ....% %...%   %   %...  %   %.%...% % % %
%%% %% %%.%.%%%%%.% %%% % % %  %% % %%%%.%%.%%%.%.%%%%% % %.%.% %%% %.%%%.% %%% %
%        .%...%...%   % % % %   % %    .. %. ...%.      % %.%.%   % %...%.%     %
% %%%%   .%%%.%.%%% % % %%% %%% % % %%%.% %.%.%%%.% %%%%% %.%.    % % %.%.%%%%% %
%   %  ...%...%.%   %       %   %   %...% %.%...%.% %  ...%.%.    % % %.%.....% %
% % %%%.%%%.%%%.%% %%%%%%%%%% %%%%%%%.%%% %.%%%.%.% %%%.%.%.%.%%%%% %%%.%%%%%.% %
% %    .....  %.......................%   %.....%.......%...%...........    %..*%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 234
Expanded Nodes: 290



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     %.            %
%                     %.            %
%                     %.            %
%                     %.            %
%                     %......       %
%                     %%%%%%.       %
%                          %.       %
%                          %.       %
%                          %.       %
%                          %.       %
%       ..............     %.       %
%       .%%%%%%%%%%%%.      .       %
%       .%............      .       %
%       .%............      .       %
%       .%............      .       %
%       .%............      .       %
%       .%............      .       %
%       *%...................       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 122
Expanded Nodes: 150




	Finally we implemented A*. For this we also copied the code used in greedy first search. The only changes that needed to be made were the creation of a new comparator and an if statement to remove a duplicate path problem. The new comparator was the same as the greedy one except it also factored in the number of steps that had been taken to the current node based on the number of nodes in the list stored within the node. The if statement checked for if there was a path of equal or lesser length already residing in the node. If so then it would not add its own list to the list of nodes. 

A*:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         % %           %     %     ....  %...........%....*%
% %%%% %% % % %%%%% %%%%% %%% % %%%%.%%.%%%.%% %% %%%.%.% % %
% %     %   %     %       %   %  .... %.....%   % % %...% % %
% % %%% % %%%% %% %%%%%%%%% %%%%%.%%% % %%% % % % % %%%%% % %
% %   %   %       %       %   ....%   %   % % % %     %   % %
% % %%% %%% %%% %%% % %%% %%%%.%% % %%% % %%% % %%% %%% %%% %
%   %     %     %   % %........ % % %   %     %   % %   % % %
% %%% %%% %%%%% %%%%% %.%%% %%% %%%%% %%%%%% %%%% %%% %%% % %
%     %.......%    .....% % %         %   %     %     %   % %
% %%%%%.%%%%%.%%%%%.%%% % % % %%%%%%%%% % % %%% %%% %%% %%% %
% %   %.%   %.......  % %   % %     %   % % %           %   %
% % %%%.% %%% %%%%% % % %%%%% % % %%% % % %%% %%%%% %%%%% %%%
%   %...% %       % % %   %   % %   % % %     %     %   % % %
% %%%.%%% % % %%% %%% %%% % %%% %%% % % %%%%%%%%% %%% % % % %
% %...%   % %   %   % %   % %     %   %   %     % %   %   % %
%...%%% % % % % % % % % %%% % %%%%%%% %%% % %%% % % %%%%%%% %
%.%   % %   % %   %   % %                 % %   % % %       %
%.%%% %%% %%% %%% % %%% % %%% % %%%%%% %%%% % %%%%% % % %%% %
%...%         %   % %   % %   %         %   % %     % % %   %
%%%.%%% % %%%%% %%%%% %%%%% %%% %%%%%%% % %%% % %%%%%%% % %%%
%...  %       %             %         %     %           %   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 94
Expanded Nodes: 307

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%.....  %       %...% %     %   %   %   %             % %   %         %     %   %
%   %.%%% % %%% %.%.% % % %%% % % % % %%% %%% %% %%%% % % % % % %%%%% % %%% %%% %
%   %.... % % % ..%.%   %   % % % % % %   % % %     % %   %   %     %   % %     %
%%% %%%%.%% % % .%%.%% %% % %%% % % % % %%% % %%%%% % % %%%%% %   % % %%% % % % %
%   % % ....%.... %..   % %   %   % % %     %     % % %     %   %       %   % % %
%   % % % %...% % % .   % % % %%% % % %%%%% %%%%% % % %%%%% % % % %%% % %%% % %%%
% %   % % %   % % % ..  %   %     % % ......%     % %     %   % %     %   %     %
% %%% % %%% % %%% % %. %% %%% %%% % %%.%%%%.% %%%%% %     % %   %% %% %%% % %%% %
% %       % % %   % %...% %.....% %   . %...  %           % %       % %   % %   %
% % %%%%% % % % %%% % %.%%%.%%%.% %%  . %.%%%%% %%% %%% %%% % %%%%% %%% %%% % % %
%   %   %   % %     % %.....%  ........ %.%   % % %   %     %     %     %   % % %
% % %%% %%%%% % % %%% % % %%% %%%%%%% %%%.% %%% % %%% % %% %%%%        %% %%% % %
% %         % % %   % %   % % %       %  .% ......% %   %         %     %   % % %
% % %%% %%%%% % %%% % %%%%% % % %%%%%%%%%.%%.%%%%.% %%%%% %% %%%%%%% %% %%% % %%%
%   %   %     %   %   %       %         %....   %...%...% %...%........   % %   %
%%% % %%% %%%%% %%%%%%% %%% %    %% %%% %%%%% % %%%.%.%..... .%.% %%%%.%%%% %%% %
%       % %           % %   %         %         % %...%   % %.%.%   % ....% %   %
% %%%%%%% % %%%%% %%% % %%% % %%%%%%% %%%%%%%%%%% %%% %%% % %.%.%%% % %%%.% % %%%
%         %     %   % %   % %   %   %   %   %     %     %   %...% %     %.% %   %
%%%%% % %%%%%   %%% % %%% % %%% %%%     % % %%% % % %%% % %%%%%%% %%% %%%.% % % %
%     %   %   %   % % %   %   %           %     %   %   %         %   %...% % % %
% %%%%%%% % % % % % % % %%% % %%%%% % %%%%%%% %%%%%%% %%%%%%% %%% %%% %.%%% % % %
%       % % %   % % % % %   %     % %       % %   %   %   %     %   % %...% % % %
%%% %% %% % %%%%% % %%% % % %  %% % %%%% %% %%% % %%%%% % % % % %%% % %%%.% %%% %
%         %   %   %   % % % %   % %       %     %       % % % %   % %   %.%     %
% %%%%    %%% % %%% % % %%% %%% % % %%% % % % %%% % %%%%% % %     % % % %.%%%%% %
%   %     %   % %   %       %   %   %   % % %   % % %     % %     % % % %.....% %
% % %%% %%% %%% %% %%%%%%%%%% %%%%%%% %%% % %%% % % %%% % % % %%%%% %%% %%%%%.% %
% %           %                       %   %     %       %   %               %..*%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 154
Expanded Nodes: 935


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                     %.            %
%                     %.            %
%                     %.            %
%                     %.            %
%                     %......       %
%                     %%%%%%.       %
%                          %.       %
%                          %.       %
%                          %.       %
%                          %.       %
%       ..............     %.       %
%       .%%%%%%%%%%%%........       %
%       .%                          %
%       .%                          %
%       .%                          %
%       .%                          %
%       .%                          %
%       *%                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Solution Cost: 44
Expanded Nodes: 191


Statements of Individual Contribution:

Peter Gifford: - 
I was personally responsible for the initial implementation of the network and nodes (because I had a lot of code already), I also wrote greedy first search and A*. I thought that the network implementation was fun, especially making sure everything was nicely linked together so getting outputs was easy. I found the greedy first pretty simple because it was essentially depth first search with a priority queue based on manhattan distance. Manhattan distance was pretty easy to calculate and the comparator change was also pretty simple. A* was slightly more challenging because I had to deal with the fact that my implementation was resulting in the output giving the two most optimal paths (they were both optimal). This was just a one line fix but it added some thought other than just using the other implementations and changing the comparator.

Sam Behrens:
I handled depth first and breadth first because they were so similar. We decided to split the searching algorithms each doing two and since depth and breadth first were so similar, I did both. Depth first was definitely not a huge challenge to implement because it is basically checking a node and if it is not the target, add its children to the stack and check them for the target. Normally it is implemented recursively but we decided to do everything with loops. Implementing depth-first first made breadth first super easy by just copy and pasting it and changing the stack to a queue. At first it seemed like this is all I had to do, but I realized it was giving me all of the most optimal solutions, sometimes there were more than one. So I had to do the same fix that Peter had to do in A* to only return one optimal path. That was not expected but it was not a hard fix. 
